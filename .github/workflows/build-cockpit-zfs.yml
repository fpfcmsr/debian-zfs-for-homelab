name: Build & Publish Cockpit ZFS (Debian Bookworm)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 1 * *" # monthly build 
    
jobs:
  build:
    name: Build Cockpit ZFS for Debian Bookworm
    runs-on: ubuntu-latest

    container:
      image: debian:bookworm
      options: --init

    env:
      DEBIAN_FRONTEND: noninteractive
      TZ: UTC

    steps:
      - name: Clone upstream cockpit-zfs repository
        run: |
          apt-get update && apt-get install -y git
          git clone --depth=1 https://github.com/45Drives/cockpit-zfs.git
          cd cockpit-zfs
          echo "✅ Cloned cockpit-zfs version:"
          git rev-parse HEAD

      - name: Install build dependencies
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            build-essential devscripts debhelper fakeroot \
            lintian python3-all python3-setuptools python3-wheel \
            python3-cython python3-pip pkg-config \
            libglib2.0-dev libsystemd-dev libzfs-dev \
            zfsutils-linux zfs-dkms reprepro curl ca-certificates gnupg

      - name: Set up GPG for signing
        run: |
          # Create the GPG directory
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg

          # Import the private key from GitHub secrets
          echo "$APT_GPG_PRIVATE_KEY" | gpg --batch --import

          # Set up GPG to use the key for signing
          echo -e "pinentry-mode loopback\nuse-agent\n" > ~/.gnupg/gpg.conf
          echo "default-key $(gpg --list-secret-keys --with-colons | grep 'sec' | cut -d: -f5)" > ~/.gnupg/gpg.conf

          # Set the passphrase for the key (loaded from the secret)
          echo "$APT_GPG_PASSPHRASE" | gpg --batch --yes --passphrase-fd 0 --edit-key $(gpg --list-secret-keys --with-colons | grep 'sec' | cut -d: -f5) trust quit

          echo "✅ GPG setup complete."

      - name: Build Debian package
        working-directory: cockpit-zfs/packaging/debian-bookworm
        run: |
          echo "⚙️ Building cockpit-zfs Debian package..."
          dpkg-buildpackage -b -us -uc
          mkdir -p /artifacts
          cp ../*.deb /artifacts/

      - name: Upload built packages
        uses: actions/upload-artifact@v4
        with:
          name: cockpit-zfs-debian-bookworm
          path: /artifacts/*.deb

      - name: Prepare APT repository with signed packages
        run: |
          mkdir -p repo/{conf,pool/main}
          cat > repo/conf/distributions <<'EOF'
          Origin: cockpit-zfs
          Label: cockpit-zfs
          Codename: bookworm
          Architectures: amd64
          Components: main
          Description: Cockpit ZFS packages for Debian Bookworm
          SignWith: yes
          EOF

          # Add the .deb packages to the repo and sign them
          reprepro -b repo includedeb bookworm /artifacts/*.deb

          # Sign the repository metadata files
          for file in repo/dists/bookworm/Release*; do
            gpg --batch --yes -u $(gpg --list-secret-keys --with-colons | grep 'sec' | cut -d: -f5) --passphrase "$APT_GPG_PASSPHRASE" --armor --output "$file.asc" --detach-sig "$file"
          done

          echo "✅ APT repository prepared and signed."

      - name: Publish APT repository to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: repo
          force_orphan: true
          keep_files: false
          commit_message: "Update Debian repo (Bookworm) from 45Drives/cockpit-zfs"

      - name: Display repo info
        run: |
          echo "✅ Repository published!"
          echo "You can now install it with:"
          echo "sudo sh -c 'echo \"deb [signed-by=/usr/share/keyrings/<your-username>-key.gpg] https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }} bookworm main\" > /etc/apt/sources.list.d/cockpit-zfs.list'"
          echo "sudo apt update && sudo apt install cockpit-zfs"
